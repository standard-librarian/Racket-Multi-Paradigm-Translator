
(define average (lambda (lst) (/ (foldl (lambda (x y) (+ x y)) 0 lst) (length lst))))

DefineNode
    ├── IdentifierNode
    │   └── average
    └── LambdaNode
        └── PARAMS
            └── IdentifierNode
                └── lst
        └── EXPRESSION
            └── DivNode
                ├── IdentifierNode
                │   └── lst
                ├── IdentifierNode
                │   └── length
                └── FoldlNode
                    ├── IdentifierNode
                    │   └── lst
                    ├── NumberNode
                    │   └── 0
                    └── LambdaNode
                        ├── PARAMS
                        │   ├── IdentifierNode
                        │   │   └── x
                        └── IdentifierNode
                            └── y
                        └── EXPRESSION
                            └── AddNode
                                ├── IdentifierNode
                                │   └── y
                                └── IdentifierNode
                                    └── x

(display (average (list 1 2 3)))
DisplayNode
    └── FunctionCallNodeWithOperands
        └── ListNodes
            ├── NumberNode
            │   └── 3
            ├── NumberNode
            │   └── 2
            └── NumberNode
                └── 1
